//  The function that returns true if a portion of str1 characters can be rearranged to match str2, otherwise returns false.

// scramble('rkqodlw', 'world') ==> True
//scramble('katas', 'steak') ==> False


function scramble(str1, str2) {
		let s1={},
			  s2={}
		for (i=0;i<str1.length;i++) {s1[str1[i]]=0;}
		for (i=0;i<str2.length;i++) {s2[str2[i]]=0;}
		for (i=0;i<str1.length;i++) {s1[str1[i]]+=1;}
		for (i=0;i<str2.length;i++) {s2[str2[i]]+=1;}
		for (key in s2) {
			if (s1[key]==undefined || s2[key]>s1[key]) return false
		}
		return true
	}
//////////////////////////////////////////////////////

function scramble(str1, str2) {
  let occurences = str1.split("").reduce((arr, cur) => { arr[cur] ? arr[cur]++ : arr[cur] = 1; return arr; }, {});
  return str2.split("").every((character) => --occurences[character] >= 0);
}
